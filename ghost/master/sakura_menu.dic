
//Because there is an all modifier here, you don't need to write -- between menu options
OnSakuraMenu : all
{
    "\C\![lock,balloonrepaint]\c"
	"%(surface)\b2\![set,autoscroll,disable]\_q"
    if Flag("pomoOn") || Flag("pomoBreakOn"){
    
        if !(visualshell){
            _seconds = pomoArray[8]
            _minutes = -1
            _hrs = _seconds/3600 
            if (_hrs < 1) {
                _minutes = _seconds/60
                _seconds = _seconds%60
            } else {
                _r = FLOOR(_seconds / 3600)
                _seconds = _seconds - (_r * 3600)
                _minutes = TOINT(_seconds/60)
                _seconds = TOINT(_seconds%60)
            }
                if _minutes < 10 {
                
                    _minutes = "0" + _minutes
                
                }
                if _seconds < 10 {
                
                    _seconds = "0" + _seconds
                
                }
                
                if _hrs < 10 {
                
                    _hrs = "0" + _hrs
                
                }
                
                "\f[bold,1]Time Left: \f[bold,0]"
                "%(_hrs):%(_minutes):%(_seconds)\n\n"
        }

        
		"You currently have a work timer running until %(pomoArray[0]):%(pomoArray[1]) %(pomoArray[6]). Would you like to cancel it?"
		if (pomoArray[4] != ""){
            "\n\n[half]Your goal for this session is %(pomoArray[4])"
        }
		"\n\n\![*]\q[Cancel current timer,OnPomoCancel]\n"
	
	}
	elseif Flag("pomoBreakOn") {
		"%(surface)\b2You currently have a break timer running until %(pomoArray[0]):%(pomoArray[1]) %(pomoArray[6]). Would you like to cancel it?"
		
		"\n\n\![*]\q[Cancel current timer,OnPomoCancel]\n"
	
	} else {

		"%(surface)\b2What combination of work and break time would you like? Presets are listed as:\nWork Time/Short Break/Long Break\_q\n\n[half]"
		"\![*]\q[25/5/20,OnStartPomo,reg]\n/
		\![*]\q[50/10/40,OnStartPomo,double]\n/
		\![*]\q[100/20/80,OnStartPomo,quad]\n"
		if customPomoOne[2] > 0 {
		"\![*]\q[%(customPomoOne[0])/%(customPomoOne[1])/%(customPomoOne[2]),OnStartPomo,customOne]\n"
		}
		if customPomoTwo[2] > 0 {
		"\![*]\q[%(customPomoTwo[0])/%(customPomoTwo[1])/%(customPomoTwo[2]),OnStartPomo,customTwo]\n"
		}
		"\![*]\q[Custom One-off,OnStartPomo,customOneOff]"
		
		if reference0 != "pomoover" {
			successivePomos = 0 //want successive pomos to tick up regardless of continuous mode, hence it is only reset if you navigate to this menu w/o a pomo/break ongoing AND if it is not from just finishing a pomo
		}
		"\_q\n\n[half]\![*]Continuous Mode: \_a[OnToggleContinuous]%(continuousPomo)\_a\n\n[half]"
		
		"\![*]\q[Start Long Session,OnStartCont]\n"
		if customPomoOne[2] > 0 {
			"\![*]\q[Change Custom Preset One,OnSetCustom,one]\n"

		} else {
			"\![*]\q[Set Custom Preset One,OnSetCustom,one]\n"
		}
		if customPomoTwo[2] > 0  {
			"\![*]\q[Change Custom Preset Two,OnSetCustom,two]\n"

		} else {
			"\![*]\q[Set Custom Preset Two,OnSetCustom,two]\n"
		}
	
	}
    
    "\n[half]\![*]\q[Stats,OnStats]"	
    "\n\![*]\q[Settings,OnSettings]"	
	
	"\n\n\![*]\q[Nevermind,OnCancel]"
    
    "\![unlock,balloonrepaint]"

    if (Flag("pomoOn") || Flag("pomoBreakOn")) {
    
        if visualshell{
    
            "\![timerraise,1000,1,OnRefresh]\e __MAIN__"
        } else {
            "\![timerraise,1000,1,OnRefresh]\e __MAIN__"
        }
    }
}

OnCancel{

    "\![timerraise,0,1,OnRefresh]\e __MAIN__"

}

OnRefresh : all {

    _last = SHIORI3FW.LastTalk 
    
    if "__MAIN__" _in_ _last {
    
        OnSakuraMenu   
    
    } elseif "__STATS__" _in_ _last {
        OnStats
    } elseif "__CUSTOMNOTIF__" _in_ _last {
        OnCustomNotif
    } elseif "__SETTINGS__" _in_ _last {
        OnSettings
    } 
}

OnStats: all {

    "\C\![lock,balloonrepaint]\c"

    "%(surface)\b2\![set,autoscroll,disable]\_q"

    "\f[bold,1]All Time\f[bold,0]\n\n[half]"
    "Work Sessions: %(totalpomos)\n"
    "Minutes spent working: %(totalmins) min\n\n[half]" 
    
    "\f[bold,1]Today\f[bold,0]\n\n[half]"
    "Work Sessions: %(todaypomos)\n"
    "Minutes spent working: %(todaymins) min\n\n"
    
    "%(surface)\_q\![*]\q[Back,OnSakuraMenu]"
    
    if (visualshell) && (Flag("pomoOn") || Flag("pomoBreakOn")) {
    
        "\![timerraise,1000,1,OnRefresh]\e __STATS__"
    
    }
    "\![unlock,balloonrepaint]"
}

OnSettings : all{
    "\C\![lock,balloonrepaint]\c"
    
    "%(surface)\b2\![set,autoscroll,disable]\_q"
    
    "\f[bold,1]Timer Ending Sound\f[bold,0]\n\n[half]"

    "\__q[OnNotifSet,Custom]Custom\__q \__q[OnCustomNotif](Pick sound)\__q\n"    
    "\__q[OnNotifSet,None]None\__q\n"
    "\__q[OnNotifSet,Announcement]Announcement\__q\n"
    "\__q[OnNotifSet,Jingle]Jingle\__q\n"
    "\__q[OnNotifSet,Ping]Ping\__q\n"
    
    "\__q[OnTestSFX]Play test sound (Current: %(notif))\__q\n\n"
    
    _g = "\f[color,disable]"
	_d = "\f[color,default]"
	
	_vol_up = "\q[▲,OnQuickVolume,Up]"
	if volume >= 100; _vol_up = "%(_g)▲%(_d)"
	_vol_down = "\q[▼,OnQuickVolume,Down]"
	if volume <= 0; _vol_down = "%(_g)▼%(_d)"
	
	"Volume: %(_vol_up)%(_vol_down) %(volume)"
    
    "\f[bold,1]\n\n\__q[OnChangeReset]Change Daily Reset Time\__q\n\f[bold,0]"
    "Current: %(reset12hr)"
    
    "\n\n%(surface)\_q\![*]\q[Back,OnSakuraMenu]"
    
    if (visualshell) && (Flag("pomoOn") || Flag("pomoBreakOn")) {
    
        "\![timerraise,1000,1,OnRefresh]\e __SETTINGS__"
    
    }
    "\![unlock,balloonrepaint]\e"
}

OnChangeReset : all{

	"\![open,inputbox,OnChangeResetInput,-1]"
    "%(surface)Enter an hour in 12 or 24 hour format. e.g: 8pm or 20.\w8\w8\w8"


}

OnChangeResetInput : all {

    _input = TOUPPER(reference0)
    
    if !(RE_SEARCH(_input, "^\d{1,2}")) { // handle incorrect format - no ints in input
        "\![open,inputbox,OnChangeResetInput,-1]"
        "%(surface)Enter an hour in 12 or 24 hour format.\w8 e.g: 8pm or 16.\w8\w8\w8\w8"
    } elseif (!(ISINTSTR(_input+'')) && !(RE_SEARCH(_input,'AM|PM'))) || RE_SEARCH{ //handle incorrect 12 hr format
        "\![open,inputbox,OnChangeResetInput,-1]\e"
        "%(surface)Enter an hour in 12 or 24 hour format.\w8 e.g: 8pm or 16.\w8\w8\w8\w8"
    }  elseif (ISINTSTR(_input+'') && _input > -1 && _input < 24) { // handle 24 hr time
        if Flag("24hr") == 0; MiscFlags ,= "24hr"
        resettime = _input 
        OnSettings
    } elseif (ISINTSTR(_input+'') && (_input < 0 || _input > 23) ) { //handle incorrect 24 hr time - too large too small
        "\![open,inputbox,OnChangeResetInput,-1]"
        "%(surface)Enter an hour in 12 or 24 hour format.\w8 e.g: 8pm or 16.\w8\w8\w8\w8"
    }
    if RE_SEARCH(_input, "^\d{1,2}") { //i probably dont need this check but.. w/e
        RemoveFlag("24hr")
        //_hour = RE_SEARCH(_input, "^\d{1,2}")
        _hour = TOINT(RE_GETSTR)
        _notalky = RE_SEARCH(_input, 'AM|PM')
        _ampm = RE_GETSTR

        if _hour < 1 || _hour > 12 { //handle incorrect time range
            "\![open,inputbox,OnChangeResetInput,-1]"
            "%(surface)Enter an hour in 12 or 24 hour format. e.g: 8pm or 16.\w8\w8\w8\w8"
        } elseif _hour == 12 && _ampm[0] == 'AM' { //midnight
            resettime = 0
            OnSettings
        } elseif _hour < 12 && _ampm[0] == "PM" { //13:00-23:00, add 12 to hour since backend treats everything as 24 hr clock
            resettime = _hour + 12
            OnSettings
        } else { //1:00-12:00
            resettime = _hour
            OnSettings
        }
    }
    


}


//*****************************  I took this from hydrate. code by zi  *****************

//Up/Down volume buttons
OnQuickVolume
{
	if reference0 == "Up"
	{
		volume += 5
		if volume > 100; volume = 100
	}
	else //Down
	{
		volume -= 5
		if volume < 0; volume = 0
	}
	OnSettings
}

OnNotifSet
{
	notif = reference0
	"\C\![sound,stop]%(notification_sound)\![raise,OnSettings]"
}

OnCustomNotif : all
{
	_h = "\f[color,default.anchor]"
	_d = "\f[color,default]"
	
	"\0\_q\b2\![set,autoscroll,disable]\![open,dialog,open]\*"
    "\C\![lock,balloonrepaint]\c"
	
	"(Choose a sound file. Supported types are %(_h).mp3%(_d), %(_h).wav%(_d), %(_h).wma%(_d), and %(_h).mid%(_d).)\n\n"
	
	"(If sound files give an error, or you would like access to more file types including %(_h).flac%(_d), %(_h).ogg%(_d), or %(_h).m4a%(_d), please consider installing \_a[https://github.com/Nevcairiel/LAVFilters/releases]LAV Filters\_a.)\n\n"
	
	"\![*]\q[Cancel,OnSettings]"
    
    if (visualshell) && (Flag("pomoOn") || Flag("pomoBreakOn")) {
    
        "\![timerraise,1000,1,OnRefresh]\e __CUSTOMNOTIF__"
    
    }
    "\![unlock,balloonrepaint]"
}

OnSystemDialog
{
	if reference0 == "open"
	{
		notif = "Custom"
		custom_sound_path = reference2
		"\C\![sound,stop]%(notification_sound)\![raise,OnSettings]"
	}
}

OnSystemDialogCancel
{
	if reference0 == "open"; "\C\![sound,stop]\![raise,OnSettings]"
}

OnTestSFX{
    "\C\![sound,stop]%(notification_sound)\![raise,OnSettings]"
}



//*****************************  Bootleg Pomodoro  *************************************************

//pomoArray
//0 = hour
//1 = min
//2 = type
//3 = customtimer [WORK]
//4 = goal
//5 = time in sec to stop
//6 = AM/PM
//7 = custom timer [BREAK]
//8 = seconds before end of timer


BalloonTooltip_OnToggleContinuous { "Runs work and break sessions continuously without user interaction\nCan be canceled by going back to this menu.\nIf used with the custom one-off setting, it will repeat the first given setting with a long break 4x longer than the short break." }
BalloonTooltip_OnStartCont { "Runs a user-determined number of sessions continuously" }

OnToggleContinuous
{
	if continuousPomo != "On"; continuousPomo = "On"
	else; continuousPomo = "Off"
	--
	OnSakuraMenu
}

OnStartCont : all {

	"\_q%(surface)How many sessions do you want to run back to back?\x"
	--
	"\![open,inputbox,OnContSessionsPicked,-1]\e"

}

OnContSessionsPicked : all{

	if !(ISINTSTR(reference0+'')) {
		
		"%(surface)\_qUse only digits.\![open,inputbox,OnContSessionsPicked,-1,]\e"
		
	} elseif reference0 < 1 {
		
		"%(surface)\_qEnter a positive number.\![open,inputbox,OnContSessionsPicked,-1,]\e"
		
	}
    --
	continuousSessions = reference0 - 1 //counting sessions left, essentially
	"\b2%(surface)\_qPick which type of session you want to run continuously.\n\n"
	--
	"\![*]\q[25/5/20,OnStartPomo,reg]\n/
	\![*]\q[50/10/40,OnStartPomo,double]\n/
	\![*]\q[100/20/80,OnStartPomo,quad]\n"
	if customPomoOne[2] > 0 {
		"\![*]\q[%(customPomoOne[0])/%(customPomoOne[1])/%(customPomoOne[2]),OnStartPomo,customOne]\n"
	}
	if customPomoTwo[2] > 0 {
		"\![*]\q[%(customPomoTwo[0])/%(customPomoTwo[1])/%(customPomoTwo[2]),OnStartPomo,customTwo]\n"
	}
	
	--
	"\n[half]%(surface)\_q\![*]\q[Nevermind,OnSakuraMenu]\e"

}


OnSetCustom {

	"%(surface)\_qHow many minutes would you like to work?\n\n[half]"
	--
	
	"\![open,inputbox,OnSetWorkCustom,-1,--reference=%(reference0)]\e"

}

OnSetWorkCustom { //should this be ref1 or ref2 we shall see

	if !(ISINTSTR(reference0+'')) {
		
		"%(surface)\_qUse only digits.\![open,inputbox,OnSetWorkCustom,-1,--reference=%(reference2)]\e"
		
	} elseif reference0 < 1 {
		
		"%(surface)\_qI can not set a timer for %(reference0) minutes. Enter a positive number.\![open,inputbox,OnSetWorkCustom,-1,--reference=%(reference2)]\e"
		
	} elseif reference2 == "one" {
	
		customPomoOne[0] = reference0
		
	} elseif reference2 == "two"
	{
		customPomoTwo[0] = reference0
	}
	--
	"%(surface)\_qHow many minutes would you like for your break?\n\n[half]"
	--
	
	"\![open,inputbox,OnSetBreakCustom,-1,--reference=%(reference2)]"

}

OnSetBreakCustom { //should this be ref1 or ref2 we shall see

	if !(ISINTSTR(reference0+'')) {
		
		"%(surface)\_q...Just digits, please. \![open,inputbox,OnSetBreakCustom,-1,--reference=%(reference2)]\e"
		
	} elseif reference0 < 1 {
		
		"%(surface)\_qI can not set a timer for %(reference0) minutes. Enter a positive number.\![open,inputbox,OnSetBreakCustom,-1,--reference=%(reference2)]\e"
		
	} elseif reference2 == "one" {
	
		customPomoOne[1] = reference0
		
	} elseif reference2 == "two"
	{
		customPomoTwo[1] = reference0
	}
	--
	"%(surface)\_qHow many minutes would you like for your long break?\n\n[half]"
	--
	
	"\![open,inputbox,OnSetLongBreakCustom,-1,--reference=%(reference2)]"

}

OnSetLongBreakCustom { //should this be ref1 or ref2 we shall see

	if !(ISINTSTR(reference0+'')) {
		
		"%(surface)\_q...Just digits, please. \![open,inputbox,OnSetLongBreakCustom,-1,--reference=%(reference2)]\e"
		
	} elseif reference0 < 1 {
		
		"%(surface)\_qI can not set a timer for %(reference0) minutes. Enter a positive number.\![open,inputbox,OnSetLongBreakCustom,-1,--reference=%(reference2)]\e"
		
	} elseif reference2 == "one" {
	
		customPomoOne[2] = reference0
		"%(surface)\_qI have set preset one to %(customPomoOne[0])/%(customPomoOne[1])/%(customPomoOne[2]), with work time/break time/long break time, respectively."
		
	} elseif reference2 == "two"
	{
		customPomoTwo[2] = reference0
		"%(surface)\_qI have set preset two to %(customPomoTwo[0])/%(customPomoTwo[1])/%(customPomoTwo[2]), with work time/break time/long break time, respectively."
	}

	--
	"\n\n[half]%(surface)\_q"
	--
	"\![*]\q[Main menu,OnSakuraMenu]\e"

}

OnStartPomo {

	pomoArray[2] = reference0
	
	if reference0 == "customOneOff" {
	

		"%(surface)\_qHow many minutes would you like to work?\n\n[half]"
	
		--
	
		"\![open,inputbox,OnSetmin,-1]"
	
	}
	else {
		"%(surface)\_qWould you like to set a goal for this work session?\n\n[half]"
		
		--
		
	"\![*]\q[Yes,OnAddGoal]\n/
	\![*]\q[No,OnNoGoal]\n\n[half]\e"
	}

}


//sets work timer for a custom time. no words or negative/0 numbers
OnSetmin{
	
	pomoArray[3] = reference0
	
	//why am i doing this. testcases r in my blood i guess. anyways checks if user entered a valid number
	if !(ISINTSTR(pomoArray[3]+'')) {
		
		"%(surface)\_q...Just digits, please. \![open,inputbox,OnSetmin,-1]\e"
		
	} elseif pomoArray[3] < 1 {
		
		"%(surface)\_qI can not set a timer for %(reference0) minutes.Enter a positive number.\![open,inputbox,OnSetmin,-1]\e"
		
	} else { //valid number
		 "%(surface)\_qWould you like to set a goal for this session?\n\n[half]"
	}
	
	--
	
	"\![*]\q[Yes,OnAddGoal]\n/
	\![*]\q[No,OnNoGoal]\n\n[half]\e"
	

}

//next few functions are for goal setting/when the user doesnt pick a goal
OnAddGoal{
	
	"%(surface)\_qWhat would you like to focus on?\n\n[half]"
	
	--
	
	"\![open,inputbox,OnPomoGoal,-1,Type your goal here.]"

}


OnPomoGoal{

	pomoArray[4] = SHIORI3FW.EscapeAllTags(reference0)
	
	--
	
	PomoStartCalc

}

OnNoGoal{
	
	pomoArray[4] = ""
	
	--
	
	PomoStartCalc

}
	
//the main meat of the pomo functionality. includes checking for when the work session runs into the next hour	
PomoStartCalc{

	pomoArray[5] = GETSECCOUNT
	
	case pomoArray[2]
      {
            when "reg" //25 min
            {
				pomoArray[5] = GETSECCOUNT + (25*60)
                pomoArray[8] = 25 * 60
            }
            when "double" //50 min
            {
				pomoArray[5] = GETSECCOUNT + (50*60)
                pomoArray[8] = 50 * 60
            }
            when "quad" //100 min
            {
				pomoArray[5] = GETSECCOUNT + (100*60)
                pomoArray[8] = 100 * 60
            } 
			when "customOne"
			{	
				pomoArray[5] = GETSECCOUNT + (customPomoOne[0]*60)
                pomoArray[8] = customPomoOne[0] * 60
			}
			when "customTwo"
			{	
				pomoArray[5] = GETSECCOUNT + (customPomoTwo[0]*60)
                pomoArray[8] = customPomoTwo[0] * 60
			}
			others //customOneOff
            {

				pomoArray[5] = GETSECCOUNT + (pomoArray[3]*60)
                pomoArray[8] = pomoArray[3] * 60
				
            }
      }
	pomoArray[0] = GETTIME(pomoArray[5])[4]
	pomoArray[1] = GETTIME(pomoArray[5])[5]
	
	if pomoArray[0] > 11; pomoArray[6] = "PM" 
	else; pomoArray[6] = "AM" 
	
	
	//fix to display 0 as midnight 
	if pomoArray[0] == 0 { 
		pomoArray[0] = 12
	}
	

	//to correct going over the 12 hour mark. gosh i wish i had just gone with military time
	if pomoArray[0] > 12 {
		pomoArray[0] = pomoArray[0] - 12
	}
	
	MiscFlags ,= "pomoOn"
	
	//formatting stuffs
	if pomoArray[1] < 10 {
	
		pomoArray[1] = "0" + pomoArray[1]
	}
	--
    OnCalcSurface
	--
	if pomoArray[4] == "" {
		
		"%(surface)\_qYour work session ends at %(pomoArray[0]):%(pomoArray[1]) %(pomoArray[6]).\w8\w8"
		
	} else {
		
		"%(surface)\_qYour goal for this session is %(pomoArray[4]). The timer is running until %(pomoArray[0]):%(pomoArray[1]) %(pomoArray[6]).\w8\w8\w8 %(surface)"
	}
	--
}

//on pomo over, presets r already calculated for break time but the custom one needs input from user
OnPomoOver{
	
	successivePomos++

    
	
	if continuousPomo == "On" && pomoArray[7] > 0 {
	
		OnPomoBreakCalc
	
	} elseif continuousSessions > 0 {
	
		continuousSessions--
		OnPomoBreakCalc

	} elseif continuousSessions == 0 {
		continuousSessions = -1;
		"%(surface)\_qYou finished your continuous work sessions.\n\n[half]"
		--
		"\n[half]%(surface)\_q\![*]\q[Main menu,OnSakuraMenu]\e"
		
	}elseif pomoArray[2] == "customOneOff" {
		
		"%(surface)\_qWould you like a break?\n\n[half]"
		
		--
	
		"\![*]\q[Yes,OnPomoBreakCustom]\n/
		\![*]\q[No,OnPomoEnd]\n\n[half]\e"
		
		
	} else {
	
		"%(surface)\_qNice job. Would you like a break?\n\n[half]"
	
		--
	
		"\![*]\q[Yes,OnPomoBreakCalc]\n/
		\![*]\q[No,OnPomoEnd]\n\n[half]\e"
	}

}


//same stuff as custom pomo time setting
OnPomoBreakCustom{

	if successivePomos > 3 {
	
		"%(surface)\_qTime to take a long break. How many minutes would you like it to be?\n\n[half]"
	
	} else {
	
		"%(surface)\_qTime to take a short break. How many minutes would you like it to be?\n\n[half]"
	}
	
	--
	
	"\![open,inputbox,OnSetbreakmin,-1]"
	

}

OnSetbreakmin{

	pomoArray[7] = reference0
	
	if !(ISINTSTR(pomoArray[7]+'')) {
		
		"%(surface)\_qUse only digits. \![open,inputbox,OnSetbreakmin,-1]\e"
		
	} elseif pomoArray[7] < 1 {
		
		"%(surface)\_qI can not set a timer for %(reference0) minutes. Enter a positive number.\![open,inputbox,OnSetbreakmin,-1]\e"
		
	}
	
	--
	
	OnPomoBreakCalc

}

//end work session, whether user had a break or not
OnPomoEnd{
	
	if continuousPomo == "On"  || continuousSessions > -1 {
	
		PomoStartCalc
	
	} else {
		
		"%(surface)\_qSession complete. Do you want to start another one?\n\n[half]"
		
		--
		
		"\![*]\q[Yes,OnSakuraMenu,pomoover]\n"
		
		--
		"\![*]\q[No,blank]\e"

	}

}

//same calculating as PomoStart
OnPomoBreakCalc{	

	pomoArray[5] = GETSECCOUNT
	
	case pomoArray[2]
      {
            when "reg" //25 min
            {
				if successivePomos > 3 {
				
					pomoArray[5] = GETSECCOUNT + (20*60)
                    pomoArray[8] = 20 * 60
					successivePomos = 0;
				
				} else {
					pomoArray[5] = GETSECCOUNT + (5*60)
                    pomoArray[8] = 5 * 60
				}
            }
            when "double" //50 min
            {
				if successivePomos > 3 {
				
					pomoArray[5] = GETSECCOUNT + (40*60)
                    pomoArray[8] = 40 * 60
					successivePomos = 0;
				
				} else {
					pomoArray[5] = GETSECCOUNT + (10*60)
                    pomoArray[8] = 10 * 60
				}
            }
            when "quad" //100 min
            {
				if successivePomos > 3 {
				
					pomoArray[5] = GETSECCOUNT + (80*60)
                    pomoArray[8] = 80 * 60
					successivePomos = 0;
				
				} else {
					pomoArray[5] = GETSECCOUNT + (20*60)
                    pomoArray[8] = 20 * 60
				}
            }			
			when "customOne"
			{	
				if successivePomos > 3 {
					pomoArray[5] = GETSECCOUNT + (customPomoOne[2]*60)
                    pomoArray[8] = customPomoOne[2]* 60
					successivePomos = 0;
				
				} else {
					pomoArray[5] = GETSECCOUNT + (customPomoOne[1]*60)
                    pomoArray[8] = customPomoOne[1]* 60
				}
			}  
			when "customTwo"
			{	
				if successivePomos > 3 {
					pomoArray[5] = GETSECCOUNT + (customPomoTwo[2]*60)
                    pomoArray[8] = customPomoTwo[2]* 60
					successivePomos = 0;
				
				} else {
					pomoArray[5] = GETSECCOUNT + (customPomoTwo[1]*60)
                    pomoArray[8] = customPomoTwo[1]* 60
				}
			}			
			others //custom
            {
				if continuousPomo == "On" && successivePomos > 3{
					pomoArray[5] = GETSECCOUNT + (pomoArray[7]*60*4)
                    pomoArray[8] = pomoArray[7]* 60 * 4
                    successivePomos = 0;
				} else {
					pomoArray[5] = GETSECCOUNT + (pomoArray[7]*60)
                    pomoArray[8] = pomoArray[7]* 60
				}
				
            }
      }
	pomoArray[0] = GETTIME(pomoArray[5])[4]
	pomoArray[1] = GETTIME(pomoArray[5])[5]
	
	if pomoArray[0] > 11; pomoArray[6] = "PM" 
	else; pomoArray[6] = "AM" 
	
	//to correct going over the 12 hour mark. gosh i wish i had just gone with military time
	if pomoArray[0] > 12 {
		pomoArray[0] = pomoArray[0] - 12
	}
	
	if pomoArray[0] == 0 { 
		pomoArray[0] = 12
	}
	MiscFlags ,= "pomoBreakOn"
	
	if pomoArray[1] < 10 {
	
		pomoArray[1] = "0" + pomoArray[1]
	}
	
    --
    OnCalcSurface
	--
	
	"%(surface)\_qYour break ends at %(pomoArray[0]):%(pomoArray[1]) %(pomoArray[6]). Take some time to rest.\w8\w8%(surface)\e"
	
}


//for canceling the pomo timer. cancels both the break timer and the work timer 
OnPomoCancel{

	
	//just cancel out everything for funsies. I probably dont need to but w/e
	pomoArray = IARRAY
	successivePomos = 0
	continuousSessions = -1
	--
	if Flag("pomoOn") {
		"%(surface)\_qWork session canceled."
	} 
	else {//pomoBreakOn
		"%(surface)\_qBreak canceled."
	}
	--
	RemoveFlag("pomoOn") 
	RemoveFlag("pomoBreakOn")
	--
	"\n\n[half]%(surface)\_q\![*]\q[Main menu,OnSakuraMenu]\e"

}

//------------------------------flags

//Usage: This is intended to take the place of single-use variables that only contain 0 or 1, used as flags for certain events and such. With these functions, you can store all those flags as a single array, meaning you can make as many flags as you want without having to really worry about save bloat. It can also make your code a bit more readable!

//You'll want to put 'MiscFlags = IARRAY' into your OnFirstBoot. That'll set up an empty array for flags to be stored in.
//When you want to check if a flag is set or not, you can do it like so:
//if Flag("My Flag") == 0
//or
//if Flag("My Flag") == 1

//Any flags that are NOT in the array are 0, and any flags that ARE in the array are 1. So, to set a flag to 1, you add it to the array like this:
//if Flag("My Flag") == 0; MiscFlags ,= "My Flag"

//You don't technically need the if check there, but it stops duplicate entries from being added. The ,= is also important; that adds a new element to an array. Don't use += for this!

//If you want to set a flag back to 0, you can remove it like so:
//RemoveFlag("My Flag")

//Flag names can be just about anything you want! They're just stored as strings. For example, for S I have "Saw Gaster with googly eyes", and for Lulo I have things like "Unlocked MP3 player" and "Unlocked journal". If you want to see what flags are set, you can just put %(MiscFlags) into script input, so it's helpful to have names that describe the flag!

Flag //Checks to see if a flag exists. Returns 1 if yes, returns 0 if no
{
	if ASEARCH(_argv[0],MiscFlags) != -1; 1
	else; 0
}

RemoveFlag //Removes all instances of a flag in the array.
{
	_elements = ASEARCHEX(_argv[0],MiscFlags)
	if ARRAYSIZE(_elements) > 0
	{
		for _i = ARRAYSIZE(_elements) - 1; _i >= 0; _i-- //Goes from the end of the list to the start, so the elements stay in the same positions while we erase
		{
			_current = _elements[_i]
			MiscFlags[_current] = IARRAY
		}
	}
}

//
OnPomoStatsBroadcast{
    "\![raiseother,__SYSTEM_ALL_GHOST__,OnPomoStatsReceive,%(totalpomos),%(totalmins),%(todaypomos),%(todaymins)]"
}